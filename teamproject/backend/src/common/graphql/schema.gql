# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type BlogCommentLike {
  id: String!
  user: User!
  blogcomment: BlogComment!
  islike: Boolean!
}

type BlogComment {
  id: String!
  contents: String!
  user: User!
  blog: Blog!
  like: Int!
}

type BlogLike {
  id: String!
  user: User!
  blog: Blog!
  islike: Boolean!
}

type Blog {
  id: String!
  title: String!
  contents: String!
  user: User!
  like: Int!
}

type CoachProfile {
  id: String!
  orgName: String!
  orgType: String!
  orgEmail: String!
  department: String!
  job: String!
  profileTitle: String!
  profileContents: String!
  image: String!
}

type CoachColumn {
  id: String!
  title: String!
  contents: String!
  hits: Int!
  user: User!
  likecount: Int!
}

type StackLike {
  id: String!
  user: User!
  stack: Stack!
  islike: Boolean!
}

type Stack {
  id: String!
  title: String!
  contents: String!
  user: User!
  like: Int!
}

type User {
  id: String!
  email: String!
  name: String!
  phoneNumber: String
  nickname: String!
  codeInterest: String!
  coachInterest: String!
  point: Int!
  coachProfile: CoachProfile!
}

type StackComment {
  id: String!
  contents: String!
  user: User!
  stack: Stack!
}

type PointTransaction {
  id: String!
  impUid: String!
  amount: Int!
  status: POINT_TRANSACTION_STATUS_ENUM!
  user: User!
}

enum POINT_TRANSACTION_STATUS_ENUM {
  PAYMENT
  CANCEL
  PENDING
}

type Query {
  fetchColumnList: [CoachColumn!]!
  fetchRecommendColumnList: [CoachColumn!]!
  fetchHighHitColumnList: [CoachColumn!]!
  fetchDetailColumn(columnId: String!): CoachColumn!
  fetchMyColumn: [CoachColumn!]!
  fetchCoachUserList: [User!]!
  fetchCoachUser(userId: String!): User!
  findAllUser: User!
  fetchBlog: [Blog!]!
  fetchmyBlog: [Blog!]!
  fetchotherBlog(email: String!): [Blog!]!
  fetchAllBlogcomment(stackid: String!): StackComment!
  fetchBloglike: [Blog!]!
  fetchStack: [Stack!]!
  fetchmyStack: [Stack!]!
  fetchotherStack(email: String!): [Stack!]!
  fetchStacklike: [Stack!]!
  fetchBlogcommentlike: [BlogComment!]!
}

type Mutation {
  increaseColumnHit(columnId: String!): CoachColumn!
  createColumn(createColumnInput: CreateColumnInput!): CoachColumn!
  updateColumn(updateColumnInput: UpdateColumnInput!, columnId: String!): CoachColumn!
  deleteColumn(columnId: String!): Boolean!
  createCoachProfile(createProfileInput: CreateCoachProfileInput!, userId: String!): User!
  updateCoachProfile(UpdateCoachInput: UpdateCoachInput!, userId: String!): User!
  deleteCoachProfile(userId: String!): Boolean!
  createPointTransaction(amount: Float!, impUid: String!): PointTransaction!
  cancelPointTransaction(amount: Float!, impUid: String!): PointTransaction!
  createUser(name: String!, nickname: String!, phonenumber: String!, password: String!, email: String!): User!
  updateUser(name: String!, nickname: String!, phonenumber: String!, password: String!): User!
  deleteUser: Boolean!
  login(password: String!, email: String!): String!
  resotreAccessToken: String!
  logout: String!
  createBlog(contents: String!, title: String!): Blog!
  updateBlog(blogid: String!, contents: String!, title: String!): Blog!
  deleteBlog(blogid: String!): String!
  uploadFile(files: [Upload!]!): [String!]!
  createBlogComment(contents: String!, stackid: String!): StackComment!
  updateBlogComment(stackcommentid: String!, contents: String!, stackid: String!): StackComment!
  deleteBlogComment(stackcommentid: String!): StackComment!
  Blogtoggle(blogid: String!): BlogLike!
  createStack(contents: String!, title: String!): Stack!
  updateStack(blogid: String!, contents: String!, title: String!): Stack!
  deleteStack(blogid: String!): String!
  uploadStackFile(files: [Upload!]!): [String!]!
  Stacktoggle(stackid: String!): StackLike!
  Blogcommenttoggle(blogcommentid: String!): BlogCommentLike!
}

input CreateColumnInput {
  title: String!
  contents: String!
}

input UpdateColumnInput {
  title: String
  contents: String
}

input CreateCoachProfileInput {
  orgName: String!
  orgType: String!
  orgEmail: String!
  department: String!
  job: String!
  profileTitle: String!
  profileContents: String!
  image: String!
}

input UpdateCoachInput {
  department: String!
  job: String!
  profileTitle: String!
  profileContents: String!
  image: String!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload
